name: 🌐 DevSecOps Terraform Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: 🧱 Terraform Security & Compliance Pipeline
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_WORKING_DIR: ./infrastructure/network

    steps:
      # -------------------------
      # Checkout the repo
      # -------------------------
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      # -------------------------
      # Setup Terraform
      # -------------------------
      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      # -------------------------
      # Terraform Formatting Check
      # -------------------------
      - name: 🔍 Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------
      # Terraform Init
      # -------------------------
      - name: 🚀 Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------
      # Terraform Validate
      # -------------------------
      - name: 🧩 Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------
      # Terraform Lint (TFLint)
      # -------------------------
      - name: 🧹 Run TFLint
        uses: terraform-linters/tflint-action@v1
        with:
          working_directory: ${{ env.TF_WORKING_DIR }}
          tflint_version: latest

      # -------------------------
      # Run Checkov Security Scan
      # -------------------------
      - name: 🛡️ Run Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------
      # Run OPA Policy Evaluation
      # -------------------------
      - name: 🔒 Run OPA Policy Evaluation
        run: |
          opa eval --fail-defined --format pretty \
          --data ./policies/opa \
          "data.terraform.deny"
        continue-on-error: true  # avoid blocking if no OPA policies yet
        working-directory: .

      # -------------------------
      # Terraform Plan
      # -------------------------
      - name: 🧮 Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan \
            -var "resource_group_name=rg-devsecops" \
            -var "vnet_name=vnet-devsecops" \
            -var "subnet_name=subnet-dev"
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------
      # Upload Plan Artifact
      # -------------------------
      - name: 📦 Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TF_WORKING_DIR }}/tfplan

  # -------------------------
  # Optional Approval Stage
  # -------------------------
  deploy:
    name: 🚀 Manual Apply to Azure
    needs: terraform
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://portal.azure.com/
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: 🚀 Terraform Init
        run: terraform init
        working-directory: ./infrastructure/network

      - name: ✅ Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./infrastructure/network

